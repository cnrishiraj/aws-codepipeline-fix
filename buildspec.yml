version: 0.2

env:
  variables:
    MODEL_ID: "anthropic.claude-3-sonnet-20240229-v1:0"
    AWS_REGION: "us-east-1"
  parameter-store:
    GITHUB_TOKEN: "/codebuild/github-token"  # Store token in Parameter Store

phases:
  install:
    runtime-versions:
      python: 3.9
    commands:
      - echo ">>> Installing system & Python dependencies"
      - pip install --upgrade pip
      - pip install boto3 botocore
      - git config --global user.name "AWS CodeBuild"
      - git config --global user.email "codebuild@example.com"
      # Configure git to use HTTPS with token
      - git config --global url."https://${GITHUB_TOKEN}@github.com/".insteadOf "https://github.com/"

  pre_build:
    commands:
      - echo ">>> Installing project requirements"
      - if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - echo ">>> Verifying AWS identity"
      - aws sts get-caller-identity
      - echo ">>> Checking commit message to prevent build loops"
      - |
        COMMIT_MSG=$(git log -1 --pretty=%B)
        if [[ "$COMMIT_MSG" == *"Auto-fix"* ]] || [[ "$COMMIT_MSG" == *"auto-fix"* ]] || [[ "$COMMIT_MSG" == *"[skip-build]"* ]]; then
          echo "Skipping build for auto-fix or skip-build commit"
          exit 0
        fi

  build:
    commands:
      - echo ">>> Checking Python files for errors..."
      - |
        for file in $(find . -type f -name "*.py" ! -name "fix_python_errors.py"); do
          if [[ "$file" == *"/venv/"* ]] || [[ "$file" == *"/.venv/"* ]] || [[ "$file" == *"/__pycache__/"* ]]; then
            echo "Skipping $file (excluded directory)"
            continue
          fi
          echo "Processing $file"
          python3 fix_python_errors.py "$file" || {
            echo "Error processing $file"
            exit 1
          }
        done

  post_build:
    commands:
      - echo ">>> Build finished at $(date)"
      - |
        if [ -n "$(git status --porcelain)" ]; then
          echo "Changes detected, committing fixes..."
          git add .
          git commit -m "Auto-fix: Python errors fixed [skip-build]"
          # Use explicit repository URL with token
          REPO_URL="https://${GITHUB_TOKEN}@github.com/$(git config --get remote.origin.url | sed 's/https:\/\/github.com\///')"
          git push "$REPO_URL" HEAD:${CODEBUILD_SOURCE_VERSION:-dev} || {
            echo "Failed to push changes. Fetching latest changes and retrying..."
            git fetch "$REPO_URL"
            git rebase origin/${CODEBUILD_SOURCE_VERSION:-dev}
            git push "$REPO_URL" HEAD:${CODEBUILD_SOURCE_VERSION:-dev}
          }
        else
          echo "No changes to commit"
        fi

artifacts:
  files:
    - "**/*.py"
  exclude-paths:
    - "**/__pycache__/**"
    - "**/venv/**"
    - "**/.venv/**" 