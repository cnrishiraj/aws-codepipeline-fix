version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.9
    commands:
      - pip install boto3 botocore
      - git config --global user.name "AWS CodeBuild"
      - git config --global user.email "codebuild@example.com"

  pre_build:
    commands:
      - echo "Checking commit message to prevent build loops"
      - |
        COMMIT_MSG=$(git log -1 --pretty=%B)
        if [[ "$COMMIT_MSG" == *"Auto-fix"* ]] || [[ "$COMMIT_MSG" == *"auto-fix"* ]] || [[ "$COMMIT_MSG" == *"[skip-build]"* ]]; then
          echo "Skipping build for auto-fix or skip-build commit"
          exit 0
        fi

  build:
    commands:
      - echo "Checking Python files for errors..."
      - |
        for file in $(find . -type f -name "*.py" ! -name "fix_python_errors.py"); do
          if [[ "$file" == *"/venv/"* ]] || [[ "$file" == *"/.venv/"* ]] || [[ "$file" == *"/__pycache__/"* ]]; then
            echo "Skipping $file (excluded directory)"
            continue
          fi
          echo "Processing $file"
          if ! python3 fix_python_errors.py "$file"; then
            echo "Error processing $file"
            exit 1
          fi
        done

  post_build:
    commands:
      - echo "Python files have been checked and fixed"
      - |
        if [ -n "$(git status --porcelain)" ]; then
          echo "Changes detected, committing fixes..."
          git add .
          git commit -m "Auto-fix: Python errors fixed [skip-build]"
          git push origin HEAD:dev || {
            echo "Failed to push changes. Fetching latest changes and retrying..."
            git fetch origin
            git rebase origin/dev
            git push origin HEAD:dev
          }
        else
          echo "No changes to commit"
        fi 