name: Python Error Fixer

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ main ]

jobs:
  fix-python:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
        aws-region: us-east-1
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install boto3 botocore
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    - name: Check commit message
      id: check_commit
      run: |
        COMMIT_MSG=$(git log -1 --pretty=%B)
        if [[ "$COMMIT_MSG" == *"Auto-fix"* ]] || [[ "$COMMIT_MSG" == *"auto-fix"* ]] || [[ "$COMMIT_MSG" == *"[skip-build]"* ]]; then
          echo "Skipping build for auto-fix or skip-build commit"
          echo "skip=true" >> $GITHUB_OUTPUT
        else
          echo "skip=false" >> $GITHUB_OUTPUT
        fi
    
    - name: Fix Python errors
      if: steps.check_commit.outputs.skip != 'true'
      run: |
        for file in $(find . -type f -name "*.py" ! -name "fix_python_errors.py"); do
          if [[ "$file" == *"/venv/"* ]] || [[ "$file" == *"/.venv/"* ]] || [[ "$file" == *"/__pycache__/"* ]]; then
            echo "Skipping $file (excluded directory)"
            continue
          fi
          echo "Processing $file"
          python3 fix_python_errors.py "$file" || {
            echo "Error processing $file"
            exit 1
          }
        done
    
    - name: Create Pull Request
      if: steps.check_commit.outputs.skip != 'true' && success()
      run: |
        if [ -n "$(git status --porcelain)" ]; then
          # Create a new branch for the fixes
          TIMESTAMP=$(date +%Y%m%d-%H%M%S)
          FIX_BRANCH="fix/python-errors-${TIMESTAMP}"
          
          # Configure git
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          
          # Create and push branch
          git checkout -b $FIX_BRANCH
          git add .
          git commit -m "Auto-fix: Python errors fixed [skip-build]"
          git push origin $FIX_BRANCH
          
          # Create PR using gh cli
          gh pr create \
            --title "Fix Python Errors (${TIMESTAMP})" \
            --body "Automated PR to fix Python errors using Claude 3.5" \
            --base main \
            --head $FIX_BRANCH
        else
          echo "No changes to commit"
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}